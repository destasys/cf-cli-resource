---
groups:
- name: main
  jobs:
  - build
  - test-cf-cli-v6
  - test-cf-cli-v7
  - test-cf-cli-v8
  - scan-image
  - shipit
  - bump-patch
- name: manage
  jobs:
  - bump-*
  - setup
  - cleanup-failed-tests
- name: all
  jobs:
  - build
  - test-*
  - scan-image
  - shipit
  - bump-*
  - setup
  - cleanup-failed-tests

jobs:
- name: build
  serial: true
  public: true
  plan:
  - get: cf-cli-resource
    trigger: true
  - get: os-image
    trigger: true
  - task: build
    privileged: true
    file: cf-cli-resource/ci/tasks/build-image.yml
    input_mapping:
      project: cf-cli-resource
  - put: resource-image-dev
    params:
      image: image/image.tar
    get_params: {skip_download: true}

- name: test-cf-cli-v6
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
      passed: [build]
      trigger: true
    - get: resource-image-dev
      passed: [build]
      trigger: true
  - task: test
    image: resource-image-dev
    file: cf-cli-resource/ci/tasks/run-shellspec.yml
    vars:
      ccr-test-jobs: 5
      ccr-cf-cli-version: 6

- name: test-cf-cli-v7
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
      passed: [build]
      trigger: true
    - get: resource-image-dev
      passed: [build]
      trigger: true
  - task: test
    image: resource-image-dev
    file: cf-cli-resource/ci/tasks/run-shellspec.yml
    vars:
      ccr-test-jobs: 5
      ccr-cf-cli-version: 7

- name: test-cf-cli-v8
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
      passed: [build]
      trigger: true
    - get: resource-image-dev
      passed: [build]
      trigger: true
  - task: test
    image: resource-image-dev
    file: cf-cli-resource/ci/tasks/run-shellspec.yml
    vars:
      ccr-test-jobs: 5
      ccr-cf-cli-version: 8

- name: scan-image
  serial: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
    - get: resource-image-dev
      passed: [test-cf-cli-v6, test-cf-cli-v7, test-cf-cli-v8]
      params: {format: oci}
      trigger: true
    - get: trivy
      trigger: true
  - task: extract-trivy-db
    file: cf-cli-resource/ci/tasks/extract-trivy-db.yml
    image: trivy
  - task: scan-image
    file: cf-cli-resource/ci/tasks/scan-image.yml
    image: trivy
    input_mapping:
      image: resource-image-dev
    params:
      IGNORE_POLICY_FILE: cf-cli-resource/ci/trivy-ignore.rego

- name: shipit
  public: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: cf-cli-resource
      passed: [scan-image]
    - get: resource-image-dev
      passed: [scan-image]
      params: {format: oci}
    - get: version
      params: {bump: final}
  - load_var: version-number
    file: version/version
  - task: prepare-github-release
    file: cf-cli-resource/ci/tasks/prepare-github-release.yml
  - put: github-release
    params:
      name: release-output/release-name
      tag: release-output/release-tag
      commitish: release-output/commitish
      body: release-output/RELEASE_NOTES.md
  - put: version
    params: {file: version/version}
  - put: resource-image-final
    inputs: [resource-image-dev, version]
    params:
      image: resource-image-dev/image.tar
      version: ((.:version-number))
      bump_aliases: true
  - put: notify
    params:
      message: |
        New release announcement!
        https://github.com/nulldriver/cf-cli-resource/releases/tag/v((.:version-number))
      mode: concise
      alert_type: success

- name: bump-major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: bump-minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: bump-patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/version}

- name: setup
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
      passed: [build]
    - get: bookstore-service-broker
  - task: build-test-app-image
    privileged: true
    file: cf-cli-resource/ci/tasks/build-image.yml
    input_mapping:
      project: cf-cli-resource
    params:
      CONTEXT: spec/fixture/static-app
  - put: prepare-cloud-foundry
    resource: cloud-foundry
    params:
      commands:
      - command: create-org
      - command: create-space
    get_params: {skip_download: true}
  - in_parallel:
    - put: test-app-image
      params:
        image: image/image.tar
      get_params: {skip_download: true}
    - put: sync-service-broker
      resource: cloud-foundry
      params:
        commands:
        - command: push
          app_name: bookstore-service-broker
          path: bookstore-service-broker/build/libs/bookstore-service-broker-0.0.1.BUILD-SNAPSHOT.jar
          manifest: bookstore-service-broker/deploy/cloudfoundry/manifest.yml
          domain: ((ccr-cf-apps-domain))
        - command: create-service-broker
          service_broker: bookstore
          username: admin
          password: supersecret
          url: https://bookstore-service-broker.((ccr-cf-apps-domain))
        - command: enable-service-access
          service_broker: bookstore
    - put: async-service-broker
      resource: cloud-foundry
      params:
        commands:
        - command: push
          app_name: bookstore-service-broker-async
          path: bookstore-service-broker/build/libs/bookstore-service-broker-0.0.1.BUILD-SNAPSHOT.jar
          manifest: bookstore-service-broker/deploy/cloudfoundry/manifest.yml
          domain: ((ccr-cf-apps-domain))
        - command: create-service-broker
          service_broker: bookstore-async
          username: admin
          password: supersecret
          url: https://bookstore-service-broker-async.((ccr-cf-apps-domain))
        - command: enable-service-access
          service_broker: bookstore-async

- name: cleanup-failed-tests
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-cli-resource
    - get: resource-image-dev
      passed: [build]
  - task: cleanup
    image: resource-image-dev
    file: cf-cli-resource/ci/tasks/cleanup-failed-tests.yml
    vars:
      ccr-cf-cli-version: 8

resources:
- name: cf-cli-resource
  type: git
  icon: github
  source:
    uri: git@github.com:nulldriver/cf-cli-resource.git
    private_key: ((git_key.private_key))
    ignore_paths:
    - .devcontainer
    - .gitignore
    - LICENSE
    - NOTICE.md
    - README.md
    - examples
    - pipeline.yml

# This should be the same image used in the Dockerfile
- name: os-image
  type: registry-image
  icon: docker
  source:
    repository: ubuntu
    tag: latest

- name: version
  type: semver
  icon: tag
  source:
    driver: git
    initial_version: 1.0.0-rc.0
    uri: git@github.com:nulldriver/cf-cli-resource.git
    branch: version
    file: version
    private_key: ((git_key.private_key))

- name: resource-image-dev
  type: registry-image
  icon: docker
  source:
    repository: nulldriver/cf-cli-resource-dev
    tag: dev
    username: ((docker.username))
    password: ((docker.password))

- name: resource-image-final
  type: registry-image
  icon: docker
  source:
    repository: nulldriver/cf-cli-resource
    username: ((docker.username))
    password: ((docker.password))

- name: trivy
  type: registry-image
  icon: docker
  source:
    repository: aquasec/trivy
    username: ((docker.username))
    password: ((docker.password))

- name: github-release
  type: github-release
  icon: package-variant-closed
  source:
    owner: nulldriver
    repository: cf-cli-resource
    access_token: ((github_access_token))

- name: notify
  type: slack-notifier
  icon: slack
  source:
    url: ((slack-webhook-url))

- name: test-app-image
  type: registry-image
  icon: docker
  source:
    repository: ((docker-private-image-repository))
    tag: latest
    username: ((docker-private.username))
    password: ((docker-private.password))

- name: bookstore-service-broker
  type: git
  icon: github
  source:
    uri: git@github.com:nulldriver/bookstore-service-broker.git
    private_key: ((git_key.private_key))

- name: cloud-foundry
  type: cf-cli-resource
  icon: cloud
  source:
    api: ((ccr-cf-api))
    username: ((cf.username))
    password: ((cf.password))
    org: service-brokers
    space: bookstore

resource_types:
- name: cf-cli-resource
  type: registry-image
  source:
    repository: nulldriver/cf-cli-resource

- name: slack-notifier
  type: registry-image
  source:
    repository: mockersf/concourse-slack-notifier
